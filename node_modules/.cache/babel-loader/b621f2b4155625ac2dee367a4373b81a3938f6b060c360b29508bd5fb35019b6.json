{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SANYAM GOEL\\\\Desktop\\\\sw_dashboard\\\\src\\\\pages\\\\Films.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport styles from \"../styleSheet/film.module.css\";\nimport Card from '../component/Card_1';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Films = () => {\n  _s();\n  const [isGrid, setIsGrid] = useState(true);\n  const api_url = \"https://swapi.dev/api/films/\";\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    async function fetchData(url) {\n      try {\n        const response = await fetch(url);\n        if (!response.ok) {\n          throw new Error(\"Network response was not ok\");\n        }\n        const fetchedData = await response.json();\n        setData(fetchedData.results);\n        console.log(\"Data is fetched.\", fetchedData.results);\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    }\n    fetchData(api_url);\n  }, []);\n  function setGrid() {\n    setIsGrid(true);\n  }\n  function setTable() {\n    setIsGrid(false);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.films,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.titleBar,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Films\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.displayButton,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: setGrid,\n          style: isGrid ? {\n            backgroundColor: 'white',\n            color: 'gray'\n          } : {\n            backgroundColor: 'transparent'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"./fourdot.png\",\n            alt: \"Grid View\",\n            style: isGrid ? {\n              backgroundColor: \"white\"\n            } : {\n              backgroundColor: 'transparent'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            style: isGrid ? {\n              display: \"\",\n              backgroundColor: 'white'\n            } : {\n              display: \"none\",\n              backgroundColor: 'white'\n            },\n            children: \"Grid\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: setTable,\n          style: !isGrid ? {\n            backgroundColor: 'white',\n            color: 'gray'\n          } : {\n            backgroundColor: 'transparent'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"./ham.png\",\n            alt: \"List View\",\n            style: {\n              backgroundColor: \"transparent\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            style: !isGrid ? {\n              display: \"\",\n              backgroundColor: 'transparent'\n            } : {\n              display: \"none\",\n              backgroundColor: 'transparent'\n            },\n            children: \"List\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), isGrid ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.main,\n      children: data.map((curr, index) => /*#__PURE__*/_jsxDEV(Card, {\n        details: curr\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.mainTable,\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Director\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Release Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: data.map((curr, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                className: styles.reel,\n                src: \"./reel.png\",\n                alt: `Reel for ${curr.title}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 21\n              }, this), curr.title]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: curr.director\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: curr.release_date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: styles.threeDot,\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"./threedot.png\",\n                className: `${styles.more} dropdown-toggle`,\n                \"data-bs-toggle\": \"dropdown\",\n                alt: `Options for ${curr.title}`,\n                \"aria-expanded\": \"false\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(Films, \"9ZDAGpy5aZUbavtcARgzkuKTuH0=\");\n_c = Films;\nexport default Films;\nvar _c;\n$RefreshReg$(_c, \"Films\");","map":{"version":3,"names":["React","useEffect","useState","styles","Card","jsxDEV","_jsxDEV","Films","_s","isGrid","setIsGrid","api_url","data","setData","fetchData","url","response","fetch","ok","Error","fetchedData","json","results","console","log","error","setGrid","setTable","className","films","children","titleBar","fileName","_jsxFileName","lineNumber","columnNumber","displayButton","onClick","style","backgroundColor","color","src","alt","display","main","map","curr","index","details","mainTable","reel","title","director","release_date","threeDot","more","_c","$RefreshReg$"],"sources":["C:/Users/SANYAM GOEL/Desktop/sw_dashboard/src/pages/Films.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport styles from \"../styleSheet/film.module.css\";\r\nimport Card from '../component/Card_1';\r\n\r\nconst Films = () => {\r\n  const [isGrid, setIsGrid] = useState(true);\r\n  const api_url = \"https://swapi.dev/api/films/\";\r\n  const [data, setData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    async function fetchData(url) {\r\n      try {\r\n        const response = await fetch(url);\r\n        if (!response.ok) {\r\n          throw new Error(\"Network response was not ok\");\r\n        }\r\n        const fetchedData = await response.json();\r\n        setData(fetchedData.results);\r\n        console.log(\"Data is fetched.\", fetchedData.results);\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n      }\r\n    }\r\n    fetchData(api_url);\r\n  }, []);\r\n\r\n  function setGrid() {\r\n    setIsGrid(true);\r\n  }\r\n  \r\n  function setTable() {\r\n    setIsGrid(false);\r\n  }\r\n\r\n  return (\r\n    <div className={styles.films}>\r\n      {/* Modal */}\r\n      {/* Your modal content */}\r\n\r\n      <div className={styles.titleBar}>\r\n        <h2>Films</h2>\r\n        <div className={styles.displayButton}>\r\n          <div onClick={setGrid} style={isGrid ? { backgroundColor: 'white', color: 'gray' } : { backgroundColor: 'transparent' }}>\r\n            <img src=\"./fourdot.png\" alt=\"Grid View\" style={isGrid ? { backgroundColor: \"white\" } : { backgroundColor: 'transparent' }}></img>\r\n            <span style={isGrid ? { display: \"\", backgroundColor: 'white' } : { display: \"none\", backgroundColor: 'white' }}>Grid</span>\r\n          </div>\r\n          <div onClick={setTable} style={!isGrid ? { backgroundColor: 'white', color: 'gray' } : { backgroundColor: 'transparent' }}>\r\n            <img src=\"./ham.png\" alt=\"List View\" style={{ backgroundColor: \"transparent\" }}></img>\r\n            <span style={!isGrid ? { display: \"\", backgroundColor: 'transparent' } : { display: \"none\", backgroundColor: 'transparent' }}>List</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Conditional rendering based on isGrid */}\r\n      {isGrid ? (\r\n        <div className={styles.main}>\r\n          {/* Mapping data for Grid View */}\r\n          {data.map((curr, index) => (\r\n            <Card key={index} details={curr} />\r\n          ))}\r\n        </div>\r\n      ) : (\r\n        <div className={styles.mainTable}>\r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                <th>Name</th>\r\n                <th>Director</th>\r\n                <th>Release Date</th>\r\n                <th></th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {/* Mapping data for List View */}\r\n              {data.map((curr, index) => (\r\n                <tr key={index}>\r\n                  <td>\r\n                    <img className={styles.reel} src=\"./reel.png\" alt={`Reel for ${curr.title}`} />\r\n                    {curr.title}\r\n                  </td>\r\n                  <td>{curr.director}</td>\r\n                  <td>{curr.release_date}</td>\r\n                  <td className={styles.threeDot}>\r\n                    <img\r\n                      src='./threedot.png'\r\n                      className={`${styles.more} dropdown-toggle`}\r\n                      data-bs-toggle=\"dropdown\"\r\n                      alt={`Options for ${curr.title}`}\r\n                      aria-expanded=\"false\"\r\n                    />\r\n                    {/* Dropdown menu */}\r\n                    {/* ... */}\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Films;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}